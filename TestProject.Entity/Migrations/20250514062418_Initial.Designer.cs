// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestProject.Entity.Data;

#nullable disable

namespace TestProject.Entity.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250514062418_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3251),
                            Email = "user1@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3265)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3267),
                            Email = "user2@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3268)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3269),
                            Email = "user3@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3270)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3271),
                            Email = "user4@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3272)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3273),
                            Email = "user5@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3274)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3275),
                            Email = "user6@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3276)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3277),
                            Email = "user7@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3278)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3280),
                            Email = "user8@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3280)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3282),
                            Email = "user9@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3283)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3284),
                            Email = "user10@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3285)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3286),
                            Email = "user10@email.com",
                            Password = "123456",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3287)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3289),
                            Email = "admin1@email.com",
                            Password = "123456",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 5, 14, 11, 54, 18, 116, DateTimeKind.Local).AddTicks(3289)
                        });
                });

            modelBuilder.Entity("TestProject.Entity.Models.User", b =>
                {
                    b.HasOne("TestProject.Entity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TestProject.Entity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
